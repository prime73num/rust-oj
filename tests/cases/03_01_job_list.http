###
# Send request:
GET http://127.0.0.1:12345/jobs HTTP/1.1


###
# Got response:
# HTTP 200
# content-length: 2
# content-type: application/json
# date: Sat, 03 Sep 2022 05:08:23 GMT
# 
# []
###
# Send request:
POST http://127.0.0.1:12345/jobs HTTP/1.1
content-type: application/json

{"contest_id":0,"language":"Rust","problem_id":1,"source_code":"fn main() {let mut line1 = String::new();std::io::stdin().read_line(&mut line1).unwrap();let a: i32 = line1.trim().parse().unwrap();let mut line2 = String::new();std::io::stdin().read_line(&mut line2).unwrap();let b: i32 = line2.trim().parse().unwrap();println!(\"{}\", a + b);}","user_id":0}
###
# Got response:
# HTTP 200
# content-length: 1186
# content-type: application/json
# date: Sat, 03 Sep 2022 05:08:23 GMT
# 
# {"cases":[{"id":0,"info":"","memory":0,"result":"Compilation Success","time":0},{"id":1,"info":"","memory":0,"result":"Accepted","time":0},{"id":2,"info":"","memory":0,"result":"Accepted","time":0},{"id":3,"info":"","memory":0,"result":"Accepted","time":0},{"id":4,"info":"","memory":0,"result":"Accepted","time":0},{"id":5,"info":"","memory":0,"result":"Accepted","time":0},{"id":6,"info":"","memory":0,"result":"Accepted","time":0},{"id":7,"info":"","memory":0,"result":"Accepted","time":0},{"id":8,"info":"","memory":0,"result":"Accepted","time":0},{"id":9,"info":"","memory":0,"result":"Accepted","time":0},{"id":10,"info":"","memory":0,"result":"Accepted","time":0}],"created_time":"2022-09-03T05:08:23.997Z","id":0,"result":"Accepted","score":100.0,"state":"Finished","submission":{"contest_id":0,"language":"Rust","problem_id":1,"source_code":"fn main() {let mut line1 = String::new();std::io::stdin().read_line(&mut line1).unwrap();let a: i32 = line1.trim().parse().unwrap();let mut line2 = String::new();std::io::stdin().read_line(&mut line2).unwrap();let b: i32 = line2.trim().parse().unwrap();println!(\"{}\", a + b);}","user_id":0},"updated_time":"2022-09-03T05:08:23.997Z"}
###
# Send request:
POST http://127.0.0.1:12345/jobs HTTP/1.1
content-type: application/json

{"contest_id":0,"language":"Rust","problem_id":2,"source_code":"fn main() {let mut data: Vec<u32> = Vec::new();loop {let mut line = String::new();if std::io::stdin().read_line(&mut line).unwrap() == 0 {break;}data.push(line.trim().parse().unwrap());}data.sort_by_key(|&x| x);data.into_iter().for_each(|x| println!(\"{}\", x));}","user_id":0}
###
# Got response:
# HTTP 200
# content-length: 1171
# content-type: application/json
# date: Sat, 03 Sep 2022 05:08:24 GMT
# 
# {"cases":[{"id":0,"info":"","memory":0,"result":"Compilation Success","time":0},{"id":1,"info":"","memory":0,"result":"Accepted","time":0},{"id":2,"info":"","memory":0,"result":"Accepted","time":0},{"id":3,"info":"","memory":0,"result":"Accepted","time":0},{"id":4,"info":"","memory":0,"result":"Accepted","time":0},{"id":5,"info":"","memory":0,"result":"Accepted","time":0},{"id":6,"info":"","memory":0,"result":"Accepted","time":0},{"id":7,"info":"","memory":0,"result":"Accepted","time":0},{"id":8,"info":"","memory":0,"result":"Accepted","time":0},{"id":9,"info":"","memory":0,"result":"Accepted","time":0},{"id":10,"info":"","memory":0,"result":"Accepted","time":0}],"created_time":"2022-09-03T05:08:24.425Z","id":1,"result":"Accepted","score":100.0,"state":"Finished","submission":{"contest_id":0,"language":"Rust","problem_id":2,"source_code":"fn main() {let mut data: Vec<u32> = Vec::new();loop {let mut line = String::new();if std::io::stdin().read_line(&mut line).unwrap() == 0 {break;}data.push(line.trim().parse().unwrap());}data.sort_by_key(|&x| x);data.into_iter().for_each(|x| println!(\"{}\", x));}","user_id":0},"updated_time":"2022-09-03T05:08:24.425Z"}
###
# Send request:
POST http://127.0.0.1:12345/jobs HTTP/1.1
content-type: application/json

{"contest_id":0,"language":"Rust","problem_id":0,"source_code":"fn main() { println!(\"Hello World!\"); }","user_id":0}
###
# Got response:
# HTTP 200
# content-length: 417
# content-type: application/json
# date: Sat, 03 Sep 2022 05:08:25 GMT
# 
# {"cases":[{"id":0,"info":"","memory":0,"result":"Compilation Success","time":0},{"id":1,"info":"","memory":0,"result":"Accepted","time":0}],"created_time":"2022-09-03T05:08:25.031Z","id":2,"result":"Accepted","score":100.0,"state":"Finished","submission":{"contest_id":0,"language":"Rust","problem_id":0,"source_code":"fn main() { println!(\"Hello World!\"); }","user_id":0},"updated_time":"2022-09-03T05:08:25.031Z"}
###
# Send request:
GET http://127.0.0.1:12345/jobs HTTP/1.1


###
# Got response:
# HTTP 200
# content-length: 2778
# content-type: application/json
# date: Sat, 03 Sep 2022 05:08:25 GMT
# 
# [{"cases":[{"id":0,"info":"","memory":0,"result":"Compilation Success","time":0},{"id":1,"info":"","memory":0,"result":"Accepted","time":0},{"id":2,"info":"","memory":0,"result":"Accepted","time":0},{"id":3,"info":"","memory":0,"result":"Accepted","time":0},{"id":4,"info":"","memory":0,"result":"Accepted","time":0},{"id":5,"info":"","memory":0,"result":"Accepted","time":0},{"id":6,"info":"","memory":0,"result":"Accepted","time":0},{"id":7,"info":"","memory":0,"result":"Accepted","time":0},{"id":8,"info":"","memory":0,"result":"Accepted","time":0},{"id":9,"info":"","memory":0,"result":"Accepted","time":0},{"id":10,"info":"","memory":0,"result":"Accepted","time":0}],"created_time":"2022-09-03T05:08:23.997Z","id":0,"result":"Accepted","score":100.0,"state":"Finished","submission":{"contest_id":0,"language":"Rust","problem_id":1,"source_code":"fn main() {let mut line1 = String::new();std::io::stdin().read_line(&mut line1).unwrap();let a: i32 = line1.trim().parse().unwrap();let mut line2 = String::new();std::io::stdin().read_line(&mut line2).unwrap();let b: i32 = line2.trim().parse().unwrap();println!(\"{}\", a + b);}","user_id":0},"updated_time":"2022-09-03T05:08:23.997Z"},{"cases":[{"id":0,"info":"","memory":0,"result":"Compilation Success","time":0},{"id":1,"info":"","memory":0,"result":"Accepted","time":0},{"id":2,"info":"","memory":0,"result":"Accepted","time":0},{"id":3,"info":"","memory":0,"result":"Accepted","time":0},{"id":4,"info":"","memory":0,"result":"Accepted","time":0},{"id":5,"info":"","memory":0,"result":"Accepted","time":0},{"id":6,"info":"","memory":0,"result":"Accepted","time":0},{"id":7,"info":"","memory":0,"result":"Accepted","time":0},{"id":8,"info":"","memory":0,"result":"Accepted","time":0},{"id":9,"info":"","memory":0,"result":"Accepted","time":0},{"id":10,"info":"","memory":0,"result":"Accepted","time":0}],"created_time":"2022-09-03T05:08:24.425Z","id":1,"result":"Accepted","score":100.0,"state":"Finished","submission":{"contest_id":0,"language":"Rust","problem_id":2,"source_code":"fn main() {let mut data: Vec<u32> = Vec::new();loop {let mut line = String::new();if std::io::stdin().read_line(&mut line).unwrap() == 0 {break;}data.push(line.trim().parse().unwrap());}data.sort_by_key(|&x| x);data.into_iter().for_each(|x| println!(\"{}\", x));}","user_id":0},"updated_time":"2022-09-03T05:08:24.425Z"},{"cases":[{"id":0,"info":"","memory":0,"result":"Compilation Success","time":0},{"id":1,"info":"","memory":0,"result":"Accepted","time":0}],"created_time":"2022-09-03T05:08:25.031Z","id":2,"result":"Accepted","score":100.0,"state":"Finished","submission":{"contest_id":0,"language":"Rust","problem_id":0,"source_code":"fn main() { println!(\"Hello World!\"); }","user_id":0},"updated_time":"2022-09-03T05:08:25.031Z"}]
